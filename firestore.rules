rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function hasRole(role) {
      return isAuthenticated() && getUserData().role == role;
    }
    
    function hasRank(allowedRanks) {
      return isAuthenticated() && getUserData().rank in allowedRanks;
    }
    
    function canManageLogs() {
      return hasRole('admin') || 
             hasRank(['Captain', 'Deputy Chief', 'Battalion Chief', 'Chief']);
    }
    
    // Users collection - allow all authenticated users to read
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && hasRole('admin');
      allow update: if isAuthenticated() && 
        (request.auth.uid == userId || hasRole('admin'));
      allow delete: if hasRole('admin');
    }
    
    // Stations collection - all authenticated users can read
    match /stations/{stationId} {
      allow read: if isAuthenticated();
      allow write: if hasRole('admin');
    }
    
    // Logs collection - the main collection for daily logs
    match /logs/{logId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && canManageLogs();
      allow update: if isAuthenticated() && canManageLogs();
      allow delete: if isAuthenticated() && canManageLogs();
    }
    
    // GAR assessments collection
    match /garAssessments/{assessmentId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() &&
        (resource.data.userId == request.auth.uid || hasRole('admin'));
      allow delete: if hasRole('admin');
    }
    
    // Activities collection (if used separately)
    match /activities/{activityId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if hasRole('admin');
    }
    
    // Settings collection
    match /settings/{settingId} {
      allow read: if isAuthenticated();
      allow write: if hasRole('admin');
    }
    
    // Catch-all for any other collections during development
    // REMOVE THIS IN PRODUCTION
    match /{document=**} {
      allow read, write: if isAuthenticated();
    }
  }
}